public class Solution {

	public static int countMinStepsToOne(int n) {
		int[] count = new int[n + 1];
		for (int i = 2; i <= n; i++) {
			count[i] = -1;
		}
		return countStep(n, count) - 1;
	}

	public static int countStep(int n, int[] count) {

		if (n == 1) {
			return 1;
		}

		if (count[n] != -1) {
			return count[n] + 1;
		}

		int c1 = Integer.MAX_VALUE;
		int c2 = Integer.MAX_VALUE;
		if (n % 3 == 0)
			c1 = countStep(n / 3, count);
		if (n % 2 == 0)
			c2 = countStep(n / 2, count);
		int c3 = countStep(n - 1, count);
		int mincount = Math.min(c1, Math.min(c2, c3));
		count[n] = mincount;
		// System.out.println(n+"-> "+mincount);
		return mincount + 1;
	}
}

public class Solution{
    static boolean isSubsetPresent(int[] arr, int n, int sum) {

        return helper1(arr, 0, sum);
    }

    private static boolean helper1(int[] arr, int n, int sum, int[][] s) {
        if (sum == 0)
            return true;
        if (n >= arr.length || sum < 0)
            return false;
        if (s[n][sum] != -1) {
            return s[n][sum] == 1;
        }

        boolean v = helper1(arr, n + 1, sum - arr[n], s) || helper1(arr, n + 1, sum, s);
        if (v)
            s[n][sum] = 1;
        else
            s[n][sum] = 0;

        return v;
    }

    private static boolean helper1(int[] arr, int n, int sum) {
        if (sum == 0)
            return true;
        if (n >= arr.length || sum < 0)
            return false;

        return helper1(arr, n + 1, sum - arr[n]) || helper1(arr, n + 1, sum);

    }
}
